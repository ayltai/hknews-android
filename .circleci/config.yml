version: 2

references:

  ## Cache

  cache_key: &cache_key
    key: cache-{{ checksum "settings.gradle" }}-{{ checksum "./gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "./app/build.gradle" }}
  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key
  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
        - ./.gradle
        - ~/.gradle
        - ~/.m2

  ## Docker image configuration

  config: &config
    working_directory: ~/workspace
    docker:
      - image: circleci/android:api-29
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Dfile.encoding=UTF8 -Xverify:none -Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"

  ## Keys

  # Google Services

  decode_gservices_key: &decode_gservices_key
    run:
      name: Decode Google Services key
      command: echo $GOOGLE_SERVICES_KEY | base64 -di > app/google-services.json

  # Android Key Store

  decode_android_key: &decode_android_key
    run:
      name: Decode Android key store
      command: echo $ANDROID_KEY_STORE | base64 -di > key-store.jks

  # Fabric

  decode_fabric_key: &decode_fabric_key
    run:
      name: Decode Fabric key
      command: echo $FABRIC_KEY | base64 -di > app/fabric.properties

jobs:

  assemble:
    <<: *config
    steps:
      - checkout
      - *restore_cache
      - *decode_gservices_key
      - run:
          name: Compile
          command: ./gradlew assembleDebug
      - *save_cache
      - store_artifacts:
          path: app/build/outputs/apk/debug
          destination: /apk/

  test:
    <<: *config
    steps:
      - checkout
      - *restore_cache
      - *decode_gservices_key
      - *decode_fabric_key
      - run:
          name: Execute unit tests
          command: ./gradlew testDebugUnitTest
      - store_test_results:
          path: app/build/test-results
      - store_artifacts:
          path: app/build/reports/tests/testDebugUnitTest
          destination: /test/
      - *save_cache
      - run:
          name: Check code quality
          command: ./gradlew lint
      - store_artifacts:
          path: app/build/reports/lint-results.html
          destination: /check/lint-results.html
      - run:
          name: Generate coverage report
          command: ./gradlew jacocoTestReport
      - store_artifacts:
          path: app/build/reports/jacoco/jacocoTestReport
          destination: /coverage/
      - run:
          name: Upload coverage report to Codacy
          command: ./gradlew uploadCoverageToCodacy
      - run:
          name: Upload coverage report to CodeCov
          command: bash <(curl -s https://codecov.io/bash)
      - run:
          name: Upload coverage report to SonarCloud
          command: ./gradlew sonarqube -Dsonar.projectKey=ayltai_hknews-android -Dsonar.organization=ayltai -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN

  check:
    <<: *config
    steps:
      - checkout
      - *restore_cache
      - *decode_gservices_key
      - run:
          name: Check code quality
          command: ./gradlew check checkstyle dependencyCheckAnalyze
      - *save_cache
      - store_artifacts:
          path: app/build/reports/checkstyle
          destination: /check/
      - store_artifacts:
          path: app/build/reports/dependency-check-report.html
          destination: /check/dependency-check-report.html

  distribute:
    <<: *config
    steps:
      - checkout
      - *restore_cache
      - *decode_gservices_key
      - *decode_android_key
      - *decode_fabric_key
      - run:
          name: Generate artifact
          command: ./gradlew assembleRelease
      - *save_cache
      - store_artifacts:
          path: app/build/outputs/apk/release
          destination: /apk/
      - store_artifacts:
          path: app/build/outputs/mapping/release
          destination: /mapping/

workflows:
  version: 2
  workflow:
    jobs:
      - assemble
      - test:
          requires:
            - assemble
      - check:
          requires:
            - assemble
      - distribute:
          requires:
            - test
            - check
          filters:
            branches:
              only:
                - master
